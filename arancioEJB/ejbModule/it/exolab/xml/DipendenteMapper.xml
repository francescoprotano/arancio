<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="it.exolab.mapper.DipendenteMapper">

	<resultMap id="dipendenteJoincontratti"
		type="it.exolab.model.Dipendente">
		<id column="id_dipendente" property="id_dipendente" />
		<result property="nome" column="nome" />
		<result property="cognome" column="cognome" />
		<result property="data_nascita" column="data_nascita" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="ruolo_fk" column="ruolo_fk" />
		<association property="contratto"
			javaType="it.exolab.model.Contratto">
			<id property="id_contratto" column="id_contratto" />
			<id property="data_assunzione" column="data_assunzione" />
			<id property="data_scadenza" column="data_scadenza" />
			<id property="tipologia" column="tipologia" />
		</association>
	</resultMap>

	<resultMap id="dipendenteJoinpresenze"
		type="it.exolab.model.Dipendente">
		<id column="id_dipendente" property="id_dipendente" />
		<result property="nome" column="nome" />
		<result property="cognome" column="cognome" />
		<result property="data_nascita" column="data_nascita" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="ruolo_fk" column="ruolo_fk" />
		<collection property="presenze"
			javaType="java.util.ArrayList">
			<id property="id_presenza" column="id_presenza" />
			<id property="id_dipendente_fk" column="id_dipendente_fk" />
			<id property="data" column="data" />
			<id property="ore_lavorate" column="ore_lavorate" />
			<id property="ore_assenza" column="ore_assenza" />
			<id property="motivazione_assenza_fk"
				column="motivazione_assenza_fk" />
			<id property="id_mese_fk" column="id_mese_fk" />
		</collection>
	</resultMap>



	<insert id="insert" parameterType="it.exolab.model.Dipendente"
		useGeneratedKeys="true" keyProperty="id_dipendente"
		keyColumn="id_dipendente">
		INSERT INTO dipendenti (nome, cognome, data_nascita, email,
		password, ruolo_fk)
		VALUES(#{nome},#{cognome}, #{data_nascita},
		#{email},#{password},#{ruolo_fk});
	</insert>

	<update id="update" parameterType="it.exolab.model.Dipendente">
		UPDATE dipendenti
		SET
		nome=#{nome}, cognome=#{cognome}, data_nascita=#{data_nascita},
		email=#{email}, password=#{password}
		WHERE id_dipendente =
		#{id_dipendente}
	</update>

	<update id="updatePassword"
		parameterType="it.exolab.model.Dipendente">
		UPDATE dipendenti
		SET
		password=#{password}
		WHERE email =
		#{email}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM dipendenti
		WHERE
		id_dipendente = #{id_dipendente}
	</delete>
	
	<select id="login" resultType="it.exolab.model.Dipendente">
		SELECT *
		FROM dipendenti
		WHERE email=#{email}
	</select>

	<select id="selectAll" resultType="it.exolab.model.Dipendente">
		SELECT *
		FROM dipendenti
	</select>
	<select id="selectByRuolo"
		resultType="it.exolab.model.Dipendente">
		SELECT *
		FROM dipendenti
		WHERE ruolo_fk=#{ruolo_fk}
	</select>
	<select id="allJoinDipendentiEContratti"
		resultMap="dipendenteJoincontratti">
		SELECT *
		FROM dipendenti d inner join contratti c ON
		c.id_dipendente_fk = d.id_dipendente;
	</select>
	<select id="allJoinDipendentiEPresenze"
		resultMap="dipendenteJoinpresenze">
		SELECT *
		FROM dipendenti d inner join presenze p ON
		p.id_dipendente_fk = d.id_dipendente;
	</select>

</mapper>